"use strict"

// Регулярные выражения

// Такая технология позволяет очень удобно работать со строками удалять заменять части слов искать кучоски слов и тд

// Регулярное выражение состоит из паттерн и флагов (паттерн - шаблон того что мы ищем или что пытаемся удалить)
/*
new RegExp ("pattern","flags"); // - классический синтаксис

/pattern/flags // - єтот синтаксис используется
*/

// Методы

//Search (ищет всегда первое совпадение)

// const ans = prompt("Введите ваше имя!");
//Найти букві н

//const reg = /n/ig;

// Флаги 
// i - хотим что то найти вне зависимотси от регистра
// g - найти несколько вхождений
// m - многострочній режим

//console.log(ans.search(reg));

//Метод match - получаем массив с инфой

// console.log(ans.match(reg));

// Метод replace - позволяет брать кусочек строки и заменять его на другое выражение

// const pass = prompt("Password");

// console.log(pass.replace(/./g, "*")); // - берем все символі которіе будут в нашем пароле и заменяет на звездочку

console.log("12-34-56".replace(/-/g, ":")); // - дефисі поменяются на двоеточия

// Метод test

//const ans = prompt("Введите ваше имя");

//const reg = /n/ig;

//console.log(reg.test(ans)); // - вернет тру или фолс

// Классы (хотим искать класс символов)
// \d - ищем цифры
// \w - ищем все слова буквы
// \s - ищем все пробелы

const ans = prompt("Введите ваше число");

const reg = /\d/g
console.log(ans.match(reg));

const str = "My name is R2D2";

console.log(str.match(/\w\d\w\d/i));

// Обратные классы (большая D W и S) - не цифры не буквы и тд

